spring.application.name=uama-microservices-provider-iot-ulink-rule-engine

#akka \u914D\u7F6E
actor.actorsystem.name = uama-akka
actor.actorsystem.actortypes = SYSTEM, INPUT, MESSAGE_TYPE_SWITCH, ROUTER, SAVE_DB, DATA_FILTER, DATA_CHECK, CREATE_ALARM, KAFKA
actor.actorsystem.config.filename = actor-system.conf

actor.actor-cluster.enable = true
actor.actor-cluster.seed-nodes = akka://${actor.actorsystem.name}@127.0.0.1:2551,akka://${actor.actorsystem.name}@127.0.0.1:2551

actor.actor-remote.canonical.hostname = 127.0.0.1
actor.actor-remote.canonical.port = 2551
actor.actor-remote.docker-container.bind = false
actor.actor-remote.bind.hostname = 0.0.0.0
actor.actor-remote.bind.port = 2551

#js evaluator config
js.java.sandbox_thread_pool_size = 32
js.java.max_cpu_time = 1000
js.java.max_errors = 3

#kafka ulink
spring.kafka.ulink.bootstrap-server = kafka.dev.rong.uama.cc:9092
spring.kafka.ulink.username = producer
spring.kafka.ulink.password = prod-sec
spring.kafka.consumer.device.alert.topic = UAMA_DEVICE_ALERT
spring.kafka.consumer.device.datapoint.topic = UAMA_DEVICE_DATAPOINT
spring.kafka.consumer.device.state.topic = UAMA_DEVICE_STATE

#mongo async
mongo.service.dao.thread_pool_size = 4
mongo.service.dao.queue_capacity = 9960
#as percent (i.e. 20 represents 20%)
mongo.service.dao.remaining_queue_capacity_threshold = 20


logging.level.com.uama.microservices.provider.ruleengine.dao=debug
logging.level.tk.mybatis=debug